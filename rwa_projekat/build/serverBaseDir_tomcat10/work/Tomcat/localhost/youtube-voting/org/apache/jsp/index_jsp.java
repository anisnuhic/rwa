/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.22
 * Generated at: 2025-06-11 22:04:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/home/anis/.gradle/caches/modules-2/files-2.1/org.glassfish.web/jakarta.servlet.jsp.jstl/2.0.0/377ec3878354cb2c1f96f99031728773c8e2603b/jakarta.servlet.jsp.jstl-2.0.0.jar", Long.valueOf(1747237029042L));
    _jspx_dependants.put("jar:file:/home/anis/.gradle/caches/modules-2/files-2.1/org.glassfish.web/jakarta.servlet.jsp.jstl/2.0.0/377ec3878354cb2c1f96f99031728773c8e2603b/jakarta.servlet.jsp.jstl-2.0.0.jar!/META-INF/c.tld", Long.valueOf(1602866772000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');

    if (request.getAttribute("randomVideos") == null) {
        response.sendRedirect("home");
        return;
    }

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"bs\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>YouTube Voting</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/style.css\">\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <header>\n");
      out.write("        <h1>YouTube Voting</h1>\n");
      out.write("        <nav>\n");
      out.write("            <ul>\n");
      out.write("                <li><a href=\"home\">Vote</a></li>\n");
      out.write("                <li><a href=\"rankings\">Rankings</a></li>\n");
      out.write("            </ul>\n");
      out.write("        </nav>\n");
      out.write("    </header>\n");
      out.write("    \n");
      out.write("    <main class=\"page-container\">\n");
      out.write("        <div class=\"voting-section\">\n");
      out.write("            <h2>Vote for your favourite video!</h2>\n");
      out.write("            \n");
      out.write("            <div id=\"messageContainer\" class=\"message-container\"></div>\n");
      out.write("            \n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            \n");
      out.write("            <div id=\"videoContainer\" class=\"video-list\">\n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                \n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div id=\"loadingIndicator\" class=\"loading-indicator\">\n");
      out.write("                <p>Procesiranje glasovanja...</p>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"info-section\">\n");
      out.write("                <p><em>Klikom na \"Vote for this video!\" dajete pozitivan glas odabranom videu i negativan glas drugom videu!</em></p>\n");
      out.write("                \n");
      out.write("                <div class=\"share-section\">\n");
      out.write("                    <button type=\"button\" class=\"share-btn\" onclick=\"toggleShareOptions()\">\n");
      out.write("                        üì§ Podijeli trenutni par videa\n");
      out.write("                    </button>\n");
      out.write("                    \n");
      out.write("                    <div id=\"shareOptions\" class=\"share-options\">\n");
      out.write("                        <h4>üì± Podijeli na socijalnim mre≈æama</h4>\n");
      out.write("                        \n");
      out.write("                        <div class=\"social-links\">\n");
      out.write("                            <a href=\"#\" class=\"social-link twitter\" onclick=\"shareOnTwitter()\">\n");
      out.write("                                üê¶ Twitter\n");
      out.write("                            </a>\n");
      out.write("                            <a href=\"#\" class=\"social-link facebook\" onclick=\"shareOnFacebook()\">\n");
      out.write("                                üë• Facebook\n");
      out.write("                            </a>\n");
      out.write("                            <a href=\"#\" class=\"social-link linkedin\" onclick=\"shareOnLinkedIn()\">\n");
      out.write("                                üíº LinkedIn\n");
      out.write("                            </a>\n");
      out.write("                            <a href=\"#\" class=\"social-link whatsapp\" onclick=\"shareOnWhatsApp()\">\n");
      out.write("                                üí¨ WhatsApp\n");
      out.write("                            </a>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <div class=\"copy-section\">\n");
      out.write("                            <p style=\"color: #ccc; margin-bottom: 10px; font-size: 14px;\">üìã Ili kopiraj link:</p>\n");
      out.write("                            <div class=\"copy-container\">\n");
      out.write("                                <input type=\"text\" id=\"shareUrl\" class=\"share-url\" readonly>\n");
      out.write("                                <button type=\"button\" class=\"copy-btn\" onclick=\"copyToClipboard()\">\n");
      out.write("                                    üìã Kopiraj\n");
      out.write("                                </button>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                        \n");
      out.write("                        <button type=\"button\" class=\"share-close\" onclick=\"closeShareOptions()\">\n");
      out.write("                            ‚úñ Zatvori\n");
      out.write("                        </button>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <div class=\"ranking-section\">\n");
      out.write("            <div class=\"mini-ranking\">\n");
      out.write("                <h3>üèÜ Top 5 Videos</h3>\n");
      out.write("                \n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                \n");
      out.write("                ");
      if (_jspx_meth_c_005fif_005f4(_jspx_page_context))
        return;
      out.write("\n");
      out.write("                \n");
      out.write("                <div>\n");
      out.write("                    <a href=\"rankings\">\n");
      out.write("                        üìä Pogledaj kompletne rezultate ‚Üí\n");
      out.write("                    </a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </main>\n");
      out.write("\n");
      out.write("    <script>\n");
      out.write("        function voteForVideo(positiveVideoId) {\n");
      out.write("            const videoContainers = document.querySelectorAll('.video-item');\n");
      out.write("            let negativeVideoId = null;\n");
      out.write("            \n");
      out.write("            videoContainers.forEach(container => {\n");
      out.write("                const videoId = container.getAttribute('data-video-id');\n");
      out.write("                \n");
      out.write("                if (parseInt(videoId) !== parseInt(positiveVideoId)) {\n");
      out.write("                    negativeVideoId = parseInt(videoId);\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            if (!negativeVideoId) {\n");
      out.write("                showMessage('Greska: Nije moguce identificirati drugi video!', 'error');\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            document.getElementById('loadingIndicator').style.display = 'block';\n");
      out.write("            \n");
      out.write("            const voteButtons = document.querySelectorAll('.vote-btn');\n");
      out.write("            voteButtons.forEach(btn => {\n");
      out.write("                btn.disabled = true;\n");
      out.write("                btn.style.opacity = '0.5';\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            $.ajax({\n");
      out.write("                url: 'vote',\n");
      out.write("                type: 'POST',\n");
      out.write("                data: {\n");
      out.write("                    positiveVideoId: positiveVideoId,\n");
      out.write("                    negativeVideoId: negativeVideoId\n");
      out.write("                },\n");
      out.write("                headers: {\n");
      out.write("                    'X-Requested-With': 'XMLHttpRequest'\n");
      out.write("                },\n");
      out.write("                dataType: 'json',\n");
      out.write("                timeout: 10000,\n");
      out.write("                success: function(response) {\n");
      out.write("                    if (response.success) {\n");
      out.write("                        showMessage(response.message || 'Hvala na glasanju!', 'success');\n");
      out.write("                        \n");
      out.write("                        if (response.newVideos && response.newVideos.length === 2) {\n");
      out.write("                            updateVideos(response.newVideos);\n");
      out.write("                        } else {\n");
      out.write("                            showMessage('Glasovanje uspjesno, ali nema novih videa za prikaz.', 'warning');\n");
      out.write("                        }\n");
      out.write("                    } else {\n");
      out.write("                        showMessage(response.error || 'Nepoznata greska', 'error');\n");
      out.write("                    }\n");
      out.write("                },\n");
      out.write("                error: function(xhr, status, error) {\n");
      out.write("                    let errorMessage = 'Greska pri komunikaciji sa serverom';\n");
      out.write("                    if (status === 'timeout') {\n");
      out.write("                        errorMessage = 'Zahtjev je istekao - pokusajte ponovo';\n");
      out.write("                    } else if (xhr.status === 404) {\n");
      out.write("                        errorMessage = 'Server endpoint nije pronadjen';\n");
      out.write("                    } else if (xhr.status === 500) {\n");
      out.write("                        errorMessage = 'Greska na serveru';\n");
      out.write("                    }\n");
      out.write("                    \n");
      out.write("                    showMessage(errorMessage, 'error');\n");
      out.write("                },\n");
      out.write("                complete: function() {\n");
      out.write("                    document.getElementById('loadingIndicator').style.display = 'none';\n");
      out.write("                    \n");
      out.write("                    const voteButtons = document.querySelectorAll('.vote-btn');\n");
      out.write("                    voteButtons.forEach(btn => {\n");
      out.write("                        btn.disabled = false;\n");
      out.write("                        btn.style.opacity = '1';\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("            });\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function updateVideos(newVideos) {\n");
      out.write("            const videoContainer = document.getElementById('videoContainer');\n");
      out.write("            if (!videoContainer) {\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            videoContainer.innerHTML = '';\n");
      out.write("            \n");
      out.write("            if (!newVideos || newVideos.length !== 2) {\n");
      out.write("                videoContainer.innerHTML = '<div class=\"error\">Greska pri ucitavanju novih videa</div>';\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            newVideos.forEach(function(video, index) {\n");
      out.write("                const safeTitle = video.title ? video.title.replace(/[&<>\"']/g, function(m) {\n");
      out.write("                    const map = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;'};\n");
      out.write("                    return map[m];\n");
      out.write("                }) : '';\n");
      out.write("                \n");
      out.write("                const safeEmbedUrl = video.embedUrl ? video.embedUrl.replace(/[&<>\"']/g, function(m) {\n");
      out.write("                    const map = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;'};\n");
      out.write("                    return map[m];\n");
      out.write("                }) : '';\n");
      out.write("                \n");
      out.write("                const videoHtml = \n");
      out.write("                    '<div class=\"video-item\" data-video-id=\"' + video.id + '\">' +\n");
      out.write("                        '<h3>' + safeTitle + '</h3>' +\n");
      out.write("                        '<iframe width=\"560\" height=\"315\" ' +\n");
      out.write("                                'src=\"' + safeEmbedUrl + '\" ' +\n");
      out.write("                                'title=\"YouTube video player\" ' +\n");
      out.write("                                'frameborder=\"0\" ' +\n");
      out.write("                                'allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" ' +\n");
      out.write("                                'referrerpolicy=\"strict-origin-when-cross-origin\" ' +\n");
      out.write("                                'allowfullscreen>' +\n");
      out.write("                        '</iframe>' +\n");
      out.write("                        '<button type=\"button\" class=\"vote-btn\" onclick=\"voteForVideo(' + video.id + ')\">' +\n");
      out.write("                            'üó≥Ô∏è Vote for this video!' +\n");
      out.write("                        '</button>' +\n");
      out.write("                    '</div>';\n");
      out.write("                \n");
      out.write("                videoContainer.innerHTML += videoHtml;\n");
      out.write("            });\n");
      out.write("            \n");
      out.write("            updateShareUrl();\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function showMessage(message, type) {\n");
      out.write("            const messageContainer = document.getElementById('messageContainer');\n");
      out.write("            if (!messageContainer) {\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            messageContainer.style.display = 'block';\n");
      out.write("            messageContainer.className = type + '-message';\n");
      out.write("            \n");
      out.write("            switch(type) {\n");
      out.write("                case 'success':\n");
      out.write("                    messageContainer.style.backgroundColor = '#d4edda';\n");
      out.write("                    messageContainer.style.color = '#155724';\n");
      out.write("                    messageContainer.style.border = '1px solid #c3e6cb';\n");
      out.write("                    break;\n");
      out.write("                case 'warning':\n");
      out.write("                    messageContainer.style.backgroundColor = '#fff3cd';\n");
      out.write("                    messageContainer.style.color = '#856404';\n");
      out.write("                    messageContainer.style.border = '1px solid #ffeaa7';\n");
      out.write("                    break;\n");
      out.write("                case 'error':\n");
      out.write("                default:\n");
      out.write("                    messageContainer.style.backgroundColor = '#f8d7da';\n");
      out.write("                    messageContainer.style.color = '#721c24';\n");
      out.write("                    messageContainer.style.border = '1px solid #f5c6cb';\n");
      out.write("                    break;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            const prefix = type === 'success' ? 'Uspjeh:' : \n");
      out.write("                           type === 'warning' ? 'Upozorenje:' : 'Greska:';\n");
      out.write("            \n");
      out.write("            const safeMessage = message ? message.replace(/[&<>\"']/g, function(m) {\n");
      out.write("                const map = {'&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#039;'};\n");
      out.write("                return map[m];\n");
      out.write("            }) : '';\n");
      out.write("            \n");
      out.write("            messageContainer.innerHTML = '<strong>' + prefix + '</strong> ' + safeMessage;\n");
      out.write("            \n");
      out.write("            setTimeout(function() {\n");
      out.write("                if (messageContainer.style.display !== 'none') {\n");
      out.write("                    messageContainer.style.display = 'none';\n");
      out.write("                }\n");
      out.write("            }, 5000);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function toggleShareOptions() {\n");
      out.write("            const shareOptions = document.getElementById('shareOptions');\n");
      out.write("            \n");
      out.write("            if (!shareOptions) {\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            const isVisible = shareOptions.classList.contains('show');\n");
      out.write("            \n");
      out.write("            if (isVisible) {\n");
      out.write("                closeShareOptions();\n");
      out.write("            } else {\n");
      out.write("                shareOptions.classList.add('show');\n");
      out.write("                updateShareUrl();\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function closeShareOptions() {\n");
      out.write("            const shareOptions = document.getElementById('shareOptions');\n");
      out.write("            if (shareOptions) {\n");
      out.write("                shareOptions.classList.remove('show');\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function updateShareUrl() {\n");
      out.write("            const videoContainers = document.querySelectorAll('.video-item');\n");
      out.write("            \n");
      out.write("            if (videoContainers.length === 2) {\n");
      out.write("                const video1Id = videoContainers[0].getAttribute('data-video-id');\n");
      out.write("                const video2Id = videoContainers[1].getAttribute('data-video-id');\n");
      out.write("                \n");
      out.write("                const shareUrl = window.location.origin + window.location.pathname + \n");
      out.write("                                '?video1=' + video1Id + '&video2=' + video2Id;\n");
      out.write("                \n");
      out.write("                const shareUrlInput = document.getElementById('shareUrl');\n");
      out.write("                if (shareUrlInput) {\n");
      out.write("                    shareUrlInput.value = shareUrl;\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function copyToClipboard() {\n");
      out.write("            const shareUrlInput = document.getElementById('shareUrl');\n");
      out.write("            const copyBtn = document.querySelector('.copy-btn');\n");
      out.write("            \n");
      out.write("            if (!shareUrlInput) {\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            try {\n");
      out.write("                shareUrlInput.select();\n");
      out.write("                shareUrlInput.setSelectionRange(0, 99999);\n");
      out.write("                \n");
      out.write("                if (navigator.clipboard && window.isSecureContext) {\n");
      out.write("                    navigator.clipboard.writeText(shareUrlInput.value).then(function() {\n");
      out.write("                        copySuccess(copyBtn);\n");
      out.write("                    }).catch(function(err) {\n");
      out.write("                        fallbackCopy(shareUrlInput, copyBtn);\n");
      out.write("                    });\n");
      out.write("                } else {\n");
      out.write("                    fallbackCopy(shareUrlInput, copyBtn);\n");
      out.write("                }\n");
      out.write("            } catch (err) {\n");
      out.write("                showMessage('Greska pri kopiranju linka', 'error');\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function fallbackCopy(input, btn) {\n");
      out.write("            try {\n");
      out.write("                const successful = document.execCommand('copy');\n");
      out.write("                if (successful) {\n");
      out.write("                    copySuccess(btn);\n");
      out.write("                } else {\n");
      out.write("                    showMessage('Kopiranje nije uspjesno', 'error');\n");
      out.write("                }\n");
      out.write("            } catch (err) {\n");
      out.write("                showMessage('Kopiranje nije podrzano u ovom browseru', 'error');\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function copySuccess(btn) {\n");
      out.write("            if (!btn) return;\n");
      out.write("            \n");
      out.write("            const originalText = btn.innerHTML;\n");
      out.write("            btn.innerHTML = '‚úÖ Kopirano!';\n");
      out.write("            btn.classList.add('copied');\n");
      out.write("            \n");
      out.write("            showMessage('Link je kopiran u clipboard!', 'success');\n");
      out.write("            \n");
      out.write("            setTimeout(function() {\n");
      out.write("                btn.innerHTML = originalText;\n");
      out.write("                btn.classList.remove('copied');\n");
      out.write("            }, 2000);\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function shareOnTwitter() {\n");
      out.write("            const shareUrlInput = document.getElementById('shareUrl');\n");
      out.write("            if (!shareUrlInput) {\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            const shareUrl = shareUrlInput.value;\n");
      out.write("            const text = encodeURIComponent('Pogledaj ove odliƒçne YouTube videe i glasaj za svoj omiljeni! üéµ');\n");
      out.write("            const twitterUrl = 'https://twitter.com/intent/tweet?text=' + text + '&url=' + encodeURIComponent(shareUrl);\n");
      out.write("            \n");
      out.write("            window.open(twitterUrl, '_blank', 'width=600,height=400');\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function shareOnFacebook() {\n");
      out.write("            const shareUrlInput = document.getElementById('shareUrl');\n");
      out.write("            if (!shareUrlInput) {\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            const shareUrl = shareUrlInput.value;\n");
      out.write("            const facebookUrl = 'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent(shareUrl);\n");
      out.write("            \n");
      out.write("            window.open(facebookUrl, '_blank', 'width=600,height=400');\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function shareOnLinkedIn() {\n");
      out.write("            const shareUrlInput = document.getElementById('shareUrl');\n");
      out.write("            if (!shareUrlInput) {\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            const shareUrl = shareUrlInput.value;\n");
      out.write("            const linkedinUrl = 'https://www.linkedin.com/sharing/share-offsite/?url=' + encodeURIComponent(shareUrl);\n");
      out.write("            \n");
      out.write("            window.open(linkedinUrl, '_blank', 'width=600,height=400');\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        function shareOnWhatsApp() {\n");
      out.write("            const shareUrlInput = document.getElementById('shareUrl');\n");
      out.write("            if (!shareUrlInput) {\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            const shareUrl = shareUrlInput.value;\n");
      out.write("            const text = encodeURIComponent('Pogledaj ove YouTube videe i glasaj za svoj omiljeni! üéµ ' + shareUrl);\n");
      out.write("            const whatsappUrl = 'https://wa.me/?text=' + text;\n");
      out.write("            \n");
      out.write("            window.open(whatsappUrl, '_blank');\n");
      out.write("        }\n");
      out.write("        \n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("            setTimeout(updateShareUrl, 500);\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /index.jsp(35,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty error}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                <div class=\"error-message\">\n");
          out.write("                    <strong>Greska:</strong> ");
          if (_jspx_meth_c_005fout_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                </div>\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /index.jsp(37,45) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${error}", java.lang.Object.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /index.jsp(42,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty randomVideos}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                    ");
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f1, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f1, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f1);
      // /index.jsp(43,20) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("video");
      // /index.jsp(43,20) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/index.jsp(43,20) '${randomVideos}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${randomVideos}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /index.jsp(43,20) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                        <div class=\"video-item\" data-video-id=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${video.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\">\n");
            out.write("                            <h3>");
            if (_jspx_meth_c_005fout_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("</h3>\n");
            out.write("                            <iframe width=\"560\" height=\"315\" \n");
            out.write("                                    src=\"");
            if (_jspx_meth_c_005fout_005f2(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\" \n");
            out.write("                                    title=\"YouTube video player\" \n");
            out.write("                                    frameborder=\"0\" \n");
            out.write("                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \n");
            out.write("                                    referrerpolicy=\"strict-origin-when-cross-origin\" \n");
            out.write("                                    allowfullscreen>\n");
            out.write("                            </iframe>\n");
            out.write("                            <button type=\"button\" class=\"vote-btn\" onclick=\"voteForVideo('");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${video.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("')\">\n");
            out.write("                                üó≥Ô∏è Vote for this video!\n");
            out.write("                            </button>\n");
            out.write("                        </div>\n");
            out.write("                    ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f1(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f1_reused = false;
    try {
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /index.jsp(45,32) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${video.title}", java.lang.Object.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      _jspx_th_c_005fout_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f2(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f2_reused = false;
    try {
      _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f2.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /index.jsp(47,41) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f2.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${video.embedUrl}", java.lang.Object.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
      if (_jspx_th_c_005fout_005f2.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      _jspx_th_c_005fout_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /index.jsp(61,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty randomVideos}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                    <div class=\"empty-state\">\n");
          out.write("                        <h3>Nema dostupnih videa za glasovanje.</h3>\n");
          out.write("                        <p>Molimo pokusajte kasnije.</p>\n");
          out.write("                    </div>\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /index.jsp(121,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty top5Videos}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                    <table>\n");
          out.write("                        <thead>\n");
          out.write("                            <tr>\n");
          out.write("                                <th>Rank</th>\n");
          out.write("                                <th>Thumbnail</th>\n");
          out.write("                                <th>Naslov</th>\n");
          out.write("                                <th>Glasovi</th>\n");
          out.write("                            </tr>\n");
          out.write("                        </thead>\n");
          out.write("                        <tbody>\n");
          out.write("                            ");
          if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fif_005f3, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("                        </tbody>\n");
          out.write("                    </table>\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f3, jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f3);
      // /index.jsp(132,28) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("video");
      // /index.jsp(132,28) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/index.jsp(132,28) '${top5Videos}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${top5Videos}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /index.jsp(132,28) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                                <tr>\n");
            out.write("                                    <td class=\"rank-cell\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${status.index + 1}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                                    <td class=\"thumbnail-cell\">\n");
            out.write("                                        <img src=\"https://img.youtube.com/vi/");
            if (_jspx_meth_c_005fout_005f3(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("/mqdefault.jpg\" \n");
            out.write("                                             alt=\"");
            if (_jspx_meth_c_005fout_005f4(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\">\n");
            out.write("                                    </td>\n");
            out.write("                                    <td class=\"title-cell\">\n");
            out.write("                                        ");
            if (_jspx_meth_c_005fout_005f5(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
              return true;
            out.write("\n");
            out.write("                                    </td>\n");
            out.write("                                    <td class=\"votes-cell\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${video.positiveVotes}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                                </tr>\n");
            out.write("                            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f3(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f3_reused = false;
    try {
      _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f3.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /index.jsp(136,77) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f3.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${video.youtubeId}", java.lang.Object.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
      if (_jspx_th_c_005fout_005f3.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
      _jspx_th_c_005fout_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f3_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f4(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f4 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f4_reused = false;
    try {
      _jspx_th_c_005fout_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f4.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /index.jsp(137,50) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f4.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${video.title}", java.lang.Object.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f4 = _jspx_th_c_005fout_005f4.doStartTag();
      if (_jspx_th_c_005fout_005f4.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f4);
      _jspx_th_c_005fout_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f4_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f5(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f5 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f5_reused = false;
    try {
      _jspx_th_c_005fout_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f5.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
      // /index.jsp(140,40) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f5.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${video.title}", java.lang.Object.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fout_005f5 = _jspx_th_c_005fout_005f5.doStartTag();
      if (_jspx_th_c_005fout_005f5.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f5);
      _jspx_th_c_005fout_005f5_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f5, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f5_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f4(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f4 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f4_reused = false;
    try {
      _jspx_th_c_005fif_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f4.setParent(null);
      // /index.jsp(149,16) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f4.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty top5Videos}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f4 = _jspx_th_c_005fif_005f4.doStartTag();
      if (_jspx_eval_c_005fif_005f4 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("                    <p style=\"text-align: center; color: #6c757d; margin: 20px 0;\">\n");
          out.write("                        Nema dovoljno videa za prikaz ranking-a.\n");
          out.write("                    </p>\n");
          out.write("                ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f4.doAfterBody();
          if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f4.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f4);
      _jspx_th_c_005fif_005f4_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f4, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f4_reused);
    }
    return false;
  }
}
